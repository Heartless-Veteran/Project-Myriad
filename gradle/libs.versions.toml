[versions]
# Android and Gradle
android-gradle-plugin = "8.13.0"
kotlin = "2.2.20"
ksp = "2.2.20-2.0.3"

# Android SDK
min-sdk = "24"
compile-sdk = "36"
target-sdk = "35"

# Jetpack Compose
compose-bom = "2025.09.00"
compose-compiler = "1.5.15"
activity-compose = "1.11.0"
navigation-compose = "2.9.4"

# AndroidX Core
core-ktx = "1.17.0"
lifecycle = "2.9.4"
documentfile = "1.1.0"

# Database
room = "2.8.0"

# Networking
retrofit = "3.0.0"
okhttp = "5.1.0"
kotlinx-serialization = "1.9.0"
retrofit-serialization-converter = "1.0.0"

# Coroutines
kotlinx-coroutines = "1.10.2"

# Image Loading
coil = "2.7.0"

# Media
media3 = "1.8.0"

# Dependency Injection
hilt = "2.57.1"

# Code Quality
ktlint = "13.1.0"
detekt = "1.23.8"
dokka = "2.0.0"

# Security
owasp-dependency-check = "11.1.0"

# Performance
baseline-profile = "1.4.1"

# Testing
junit = "4.13.2"
android-test-ext-junit = "1.3.0"
espresso = "3.7.0"

# AI/ML
mlkit-text-recognition = "16.0.1"
mlkit-language-id = "17.0.6"
mlkit-translate = "17.0.3"
gson = "2.13.2"

# Utils
zip4j = "2.11.5"
accompanist-permissions = "0.37.3"

# Benchmark
benchmark-macro-junit4 = "1.4.1"
uiautomator = "2.4.0"

# Coverage
jacoco = "0.8.13"

[libraries]
# Android Gradle Plugin
android-gradle-plugin = { group = "com.android.tools.build", name = "gradle", version.ref = "android-gradle-plugin" }

# AndroidX Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
androidx-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-runtime-compose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "lifecycle" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
androidx-documentfile = { group = "androidx.documentfile", name = "documentfile", version.ref = "documentfile" }

# Jetpack Compose BOM
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-material3 = { group = "androidx.compose.material3", name = "material3" }
compose-material-icons-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }

# Navigation
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation-compose" }

# Room Database
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }

# Networking
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-converter-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
okhttp-logging-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
retrofit-kotlinx-serialization-converter = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-serialization-converter" }

# Coroutines
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# Image Loading
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

# Media
media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
media3-ui = { group = "androidx.media3", name = "media3-ui", version.ref = "media3" }
media3-common = { group = "androidx.media3", name = "media3-common", version.ref = "media3" }

# Dependency Injection
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-compiler", version.ref = "hilt" }

# AI/ML
mlkit-text-recognition = { group = "com.google.mlkit", name = "text-recognition", version.ref = "mlkit-text-recognition" }
mlkit-language-id = { group = "com.google.mlkit", name = "language-id", version.ref = "mlkit-language-id" }
mlkit-translate = { group = "com.google.mlkit", name = "translate", version.ref = "mlkit-translate" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }

# Utils
zip4j = { group = "net.lingala.zip4j", name = "zip4j", version.ref = "zip4j" }
accompanist-permissions = { group = "com.google.accompanist", name = "accompanist-permissions", version.ref = "accompanist-permissions" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "android-test-ext-junit" }
androidx-test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }

# Benchmark
benchmark-macro-junit4 = { group = "androidx.benchmark", name = "benchmark-macro-junit4", version.ref = "benchmark-macro-junit4" }
androidx-test-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }

[plugins]
# Android
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-test = { id = "com.android.test", version.ref = "android-gradle-plugin" }

# Kotlin
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# KSP
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# Dependency Injection
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }

# Code Quality
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }

# Security
owasp-dependency-check = { id = "org.owasp.dependencycheck", version.ref = "owasp-dependency-check" }

# Performance
baseline-profile = { id = "androidx.baselineprofile", version.ref = "baseline-profile" }

[bundles]
# Compose UI bundle
compose-ui = [
    "compose-ui",
    "compose-ui-graphics", 
    "compose-ui-tooling-preview",
    "compose-material3"
]

# Compose UI debug bundle
compose-ui-debug = [
    "compose-ui-tooling",
    "compose-ui-test-manifest"
]

# Compose UI testing bundle
compose-ui-testing = [
    "compose-ui-test-junit4"
]

# Room bundle
room = [
    "room-runtime",
    "room-ktx"
]

# Networking bundle
networking = [
    "retrofit",
    "retrofit-converter-gson",
    "okhttp-logging-interceptor",
    "kotlinx-serialization-json",
    "retrofit-kotlinx-serialization-converter"
]

# Media3 bundle
media3 = [
    "media3-exoplayer",
    "media3-ui", 
    "media3-common"
]

# AI/ML bundle
mlkit = [
    "mlkit-text-recognition",
    "mlkit-language-id",
    "mlkit-translate"
]

# Testing bundle
testing = [
    "junit",
    "kotlinx-coroutines-test"
]

# Android testing bundle
android-testing = [
    "androidx-test-ext-junit",
    "androidx-test-espresso-core"
]

# Benchmark bundle
benchmark = [
    "benchmark-macro-junit4",
    "androidx-test-ext-junit",
    "androidx-test-espresso-core",
    "androidx-test-uiautomator"
]