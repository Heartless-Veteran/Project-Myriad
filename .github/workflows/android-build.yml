name: Android Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]


permissions:
  contents: read
  actions: read
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      
    - name: Setup Node.js
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
      with:
        node-version: '22'
        
    - name: Setup Java
      uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Cache Gradle packages
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache node modules
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build Android Debug APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Upload APK
      if: always() && hashFiles('android/app/build/outputs/apk/debug/app-debug.apk') != ''
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
      with:
        name: android-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Run Android tests
      run: |
        cd android
        ./gradlew test
