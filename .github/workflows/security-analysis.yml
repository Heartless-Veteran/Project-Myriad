name: 🛡️ Security Analysis

on:
  push:
    branches: [ main, alpha ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sundays at 2 AM UTC
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  codeql-analysis:
    name: 🔍 CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        language: [ 'java-kotlin', 'javascript-typescript' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup Java
      if: matrix.language == 'java-kotlin'
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Node.js
      if: matrix.language == 'javascript-typescript'
      uses: actions/setup-node@v5
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install Node.js dependencies
      if: matrix.language == 'javascript-typescript'
      run: npm install --legacy-peer-deps

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v4

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:${{matrix.language}}"

  dependency-scan:
    name: 📦 Dependency Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install npm dependencies
      run: npm install --legacy-peer-deps
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate --output=json > npm-audit.json || true
      
    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
        
    - name: Make Gradle wrapper executable
      run: chmod +x ./gradlew
      
    - name: Run dependency vulnerability check
      run: ./gradlew dependencyCheckAnalyze --no-daemon
      continue-on-error: true
      
    - name: Upload dependency scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-scan-results
        path: |
          npm-audit.json
          build/reports/
        retention-days: 30

  container-scan:
    name: 🐳 Container Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v4
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  secrets-scan:
    name: 🔐 Secrets Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  security-summary:
    name: 📊 Security Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [codeql-analysis, dependency-scan, container-scan, secrets-scan]
    if: always()
    
    steps:
    - name: Security Summary
      run: |
        echo "## 🛡️ Security Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis**: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Dependency Scanning**: ${{ needs.dependency-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Container Scanning**: ${{ needs.container-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Secrets Scanning**: ${{ needs.secrets-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Check the workflow run for detailed results and artifacts." >> $GITHUB_STEP_SUMMARY