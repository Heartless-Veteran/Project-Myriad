name: AI - Gemini CLI Integration

on:
  workflow_call:
    # This workflow can be called by other workflows
    inputs:
      command:
        description: 'Gemini CLI command to run'
        required: true
        type: string
  workflow_dispatch:
    inputs:
      command:
        description: 'Gemini CLI command to run'
        required: true
        type: string
        default: 'help'

permissions:
  contents: read

jobs:
  run-gemini:
    name: Execute Gemini CLI
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      
      - name: Install Google Cloud CLI
        run: |
          # Install Google Cloud CLI using the official installation script
          curl https://sdk.cloud.google.com | bash
          echo "$HOME/google-cloud-sdk/bin" >> $GITHUB_PATH
          # Restart shell to load gcloud
          exec -l $SHELL
          
      - name: Setup Google Cloud CLI
        run: |
          # Authenticate and configure gcloud if API key is available
          if [ -n "${{ secrets.GEMINI_API_KEY }}" ]; then
            # Set up authentication using the API key
            echo "GEMINI_API_KEY is configured, enabling Gemini features"
            echo "export GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> $GITHUB_ENV
          else
            echo "‚ö†Ô∏è GEMINI_API_KEY not configured. Some Gemini features may not work."
            echo "To enable full functionality:"
            echo "1. Get an API key from https://makersuite.google.com/app/apikey"
            echo "2. Add it as GEMINI_API_KEY in repository secrets"
          fi
          
      - name: Run Gemini Command
        run: |
          # Execute the requested command
          case "${{ inputs.command }}" in
            "help"|"--help"|"-h")
              echo "ü§ñ Gemini CLI Integration Help"
              echo "=============================="
              echo ""
              echo "Available commands:"
              echo "  help          - Show this help message"
              echo "  version       - Show version information"
              echo "  test-api      - Test API connectivity (requires GEMINI_API_KEY)"
              echo "  analyze       - Run code analysis"
              echo ""
              echo "Environment:"
              if [ -n "${{ secrets.GEMINI_API_KEY }}" ]; then
                echo "  ‚úÖ GEMINI_API_KEY: Configured"
              else
                echo "  ‚ùå GEMINI_API_KEY: Not configured"
              fi
              ;;
            "version")
              echo "ü§ñ Gemini CLI Integration v1.0"
              echo "Node.js version: $(node --version)"
              echo "Google Cloud SDK: $(gcloud version --format='value(Google Cloud SDK)')" || echo "Google Cloud SDK: Installing..."
              ;;
            "test-api")
              if [ -z "${{ secrets.GEMINI_API_KEY }}" ]; then
                echo "‚ùå Cannot test API: GEMINI_API_KEY not configured"
                echo "Please add your API key to repository secrets"
                exit 1
              fi
              
              echo "üß™ Testing Gemini API connectivity..."
              # Use the validation script we already have
              if [ -f "scripts/validate-gemini-api.js" ]; then
                GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" node scripts/validate-gemini-api.js
              else
                echo "‚úÖ API key is configured (validation script not found)"
              fi
              ;;
            "analyze")
              echo "üìä Running code analysis..."
              if [ -f "scripts/analyze.js" ]; then
                node scripts/analyze.js
              else
                echo "‚ùå Analysis script not found at scripts/analyze.js"
                exit 1
              fi
              ;;
            *)
              echo "‚ùå Unknown command: ${{ inputs.command }}"
              echo "Run with 'help' to see available commands"
              exit 1
              ;;
          esac
