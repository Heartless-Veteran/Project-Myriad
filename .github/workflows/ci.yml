name: Continuous Integration

permissions:
  contents: read
  security-events: write

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-quality:
    name: Build, Test & Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Build first to ensure compilation works - allow failure but report it
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace
        continue-on-error: true
        id: build

      # Run all quality checks in parallel-safe manner - only if build succeeded
      - name: Run code formatting check (ktlint)
        if: steps.build.outcome == 'success'
        run: ./gradlew ktlintCheck --continue
        continue-on-error: true

      - name: Run static analysis (detekt)
        if: steps.build.outcome == 'success'
        run: ./gradlew detekt --continue
        continue-on-error: true

      - name: Run Android lint
        if: steps.build.outcome == 'success'
        run: ./gradlew lintDebug --continue
        continue-on-error: true

      - name: Run unit tests
        if: steps.build.outcome == 'success'
        run: ./gradlew test --stacktrace
        continue-on-error: true

      - name: Generate test coverage report
        run: ./gradlew jacocoTestReport --continue
        continue-on-error: true

      # Upload all artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            app/build/outputs/apk/debug/
            app/build/reports/
          retention-days: 7

      - name: Upload quality reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports
          path: |
            app/build/reports/ktlint/
            */build/reports/ktlint/
            app/build/reports/detekt/
            */build/reports/detekt/
            app/build/reports/jacoco/
            */build/reports/jacoco/
            app/build/reports/lint-results-debug.html
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/test-results/
            */build/reports/tests/
          retention-days: 7

  documentation:
    name: Generate Documentation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-and-quality
    if: github.event_name == 'push' || github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Generate Dokka documentation
        run: ./gradlew app:dokkaGenerateModuleHtml --continue
        continue-on-error: true

      - name: Set up Node.js for validation scripts
        uses: actions/setup-node@v5
        with:
          node-version: '18'

      - name: Run architecture validation
        run: |
          if [ -f scripts/validate-architecture.js ]; then
            node scripts/validate-architecture.js
          else
            echo "scripts/validate-architecture.js not found, skipping."
          fi
        continue-on-error: true

      - name: Update README statistics
        run: |
          if [ -f scripts/update-readme-stats.js ]; then
            node scripts/update-readme-stats.js
          else
            echo "scripts/update-readme-stats.js not found, skipping."
          fi
        continue-on-error: true

      - name: Upload documentation
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: documentation
          path: |
            app/build/dokka/
            docs/
          retention-days: 30

  release:
    name: Release Build
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: build-and-quality
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build release APK
        run: ./gradlew assembleRelease --stacktrace

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/
          retention-days: 30
